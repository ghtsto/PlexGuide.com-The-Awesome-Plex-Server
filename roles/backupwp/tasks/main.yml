#!/bin/bash
#
# [Ansible Role]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
---
- name: "Server ID for Backup"
  shell: "cat /var/plexguide/wp.id"
  register: server_id

- name: "For WP Container"
  shell: "echo 'wordpress-{{server_id.stdout}}'"
  register: wp_id

- debug: msg="Temp Message - For {{wp_id.stdout}}"

############## CHECKING DATA LOCATION
- name: "Checking {{server_id.stdout}} location in APPDATA"
  stat:
    path: /opt/appdata/wordpress/{{server_id.stdout}}
  register: programappdata

- name: "Checking if RClone Encrypted"
  stat:
    path: /var/plexguide/rclone-en.yes
  register: encrypted

############## STOPPING CONTAINERS
- name: Stopping Docker Container - {{wp_id.stdout}}-db
  docker_container:
    name: "{{wp_id.stdout}}-db"
    state: stopped
  ignore_errors: True
  when: programappdata.stat.exists == True

- name: Stopping Docker Container - {{wp_id.stdout}}
  docker_container:
    name: "{{wp_id.stdout}}"
    state: stopped
  ignore_errors: True
  when: programappdata.stat.exists == True

################ BACKUP PROCESS
- debug: msg="{{wp_id.stdout}} - Time Length can be Long or Short! Please Wait!"
  when: programappdata.stat.exists == True

- name: Backing Up {{wp_id.stdout}} to GDrive
  archive:
    path:
    - /opt/appdata/wordpress/{{server_id.stdout}}/*
    dest: /tmp/{{wp_id.stdout}}.tar
    format: tar

- name: Backing Up {{wp_id.stdout}}-db to GDrive
  archive:
    path:
    - /opt/appdata/wordpress/{{server_id.stdout}}-db/*
    dest: /tmp/{{wp_id.stdout}}-db.tar
    format: tar

############ BACKUP OTHER - END
- name: Restart Docker Container - {{server_id.stdout}}-db
  docker_container:
    name: "{{wp_id.stdout}}-db"
    state: started
  ignore_errors: True
  when: programappdata.stat.exists == True

- name: Restart Docker Container - {{server_id.stdout}}
  docker_container:
    name: "{{wp_id.stdout}}"
    state: started
  ignore_errors: True
  when: programappdata.stat.exists == True

############ FOR WORDPRESS - Uploading
- name: Uploading Wordpress Backup to Google Drive
  shell: "rclone copy /tmp/{{wp_id.stdout}}.tar gdrive:/plexguide/backup/wordpress/{{server_id.stdout}}/{{server_id.stdout}} -v --checksum --drive-chunk-size=64M"
  when: encrypted.stat.exists == False and programappdata.stat.exists == True

- name: Uploading Wordpress Backup to Google Drive (encrypted)
  shell: "rclone copy /tmp/{{wp_id.stdout}}.tar gcrypt:/plexguide/backup/wordpress/{{server_id.stdout}}/{{server_id.stdout}} -v --checksum --drive-chunk-size=64M"
  when: encrypted.stat.exists == True and programappdata.stat.exists == True

############# FOR DATABASE - Uploading
- name: Uploading Wordpress Database Backup to Google Drive
  shell: "rclone copy /tmp/{{wp_id.stdout}}-db.tar gdrive:/plexguide/backup/wordpress/{{server_id.stdout}}/{{server_id.stdout}}-db -v --checksum --drive-chunk-size=64M"
  when: encrypted.stat.exists == False and programappdata.stat.exists == True

- name: Uploading Wordpress Database Backup to Google Drive (encrypted)
  shell: "rclone copy /tmp/{{wp_id.stdout}}-db.tar gcrypt:/plexguide/backup/wordpress/{{server_id.stdout}}/{{server_id.stdout}}-db -v --checksum --drive-chunk-size=64M"
  when: encrypted.stat.exists == True and programappdata.stat.exists == True

############## REMOVE TEMP ITEMS
- name: Remove TEMP Backup!
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /tmp/{{wp_id.stdout}}.tar
    - /tmp/{{wp_id.stdout}}-db.tar
  when: programappdata.stat.exists == True
############### STATS

- debug: msg="Program is now backed up to your Google Drive - {{wp_id.stdout}}.tar"
  when: programappdata.stat.exists == True

- debug: msg="The Program's Data DOES NOT EXIST Locally - Cannot Backup {{wp_id.stdout}}.tar"
  when: programappdata.stat.exists == False
