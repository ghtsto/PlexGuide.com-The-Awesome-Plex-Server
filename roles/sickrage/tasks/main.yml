#!/bin/bash
#
# [Ansible Role]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq & FlickerRate
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
---
- include_vars: variables.yml

- include_role:
    name: pgmstart

- pause:
    prompt: "\nType Image # for Sonarr\n1- linuxserver/sickrage (Recommended)\n2- sickrage/sickrage"
  register: result
  until: result.user_input > "0" and result.user_input < "4"
  retries: 5
  delay: 1

- name: Set linuxserver/sickrage
  set_fact: 
    image: "linuxserver/sickrage"
    extra: ""
  when: result.user_input == "1"

- name: sickrage/sickrage
  set_fact: 
    image: "sickrage:sickrage"
  when: result.user_input == "2"

- name: Create Sickrage Directories
  file: "path={{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true"
  with_items:
    - "{{path.stdout}}/{{role_name}}"
    - "{{path.stdout}}/{{role_name}}/downloads"

- name: Deploy Sickrage Container
  docker_container:
    name: "{{role_name}}"
    image: "linuxserver/{{role_name}}"
    pull: yes
    published_ports:
      - "{{ports.stdout}}{{extport}}:{{intport}}"
    volumes:
      - /opt/appdata/{{role_name}}:/config
      - /opt/appdata/{{role_name}}/scripts:/scripts
      - "{{path.stdout}}/{{role_name}}/downloads:/downloads"
      - /mnt/unionfs/:/tv
    cpu_shares: 256
    env:
      PUID: 1000
      PGID: 1000
    networks:
      - name: plexguide
        aliases:
          - "{{role_name}}"
    restart_policy: always
    state: started
    labels:
      traefik.enable: "true"
      traefik.frontend.redirect.entryPoint: "https"
      traefik.frontend.rule: "Host:{{role_name}}.{{domain.stdout}}"
      traefik.port: "{{intport}}"

- include_role:
    name: pgmend
