#!/bin/bash
#
# [OpenVPN]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
---
- name: Logging Ansible Role Information
  shell: "echo 'INFO - Ansible Role {{role_name}} Started' > /var/plexguide/pg.log && bash /opt/plexguide/roles/log/log.sh"

- include_role:
    name: vpn_variables

##### Need to move vpn server setup to ovpn.sh!

##### Need to make sure to run:-
##### /sbin/modprobe iptable_mangle


- name: "Establishing OpenVPN Username"
  shell: "awk '{print $1}' /var/plexguide/vpn.user"
  register: vpnuser
  tags:
    openvpn
- debug: msg="Your Username is {{ vpnuser.stdout }}"

- name: "Establishing OpenVPN Password"
  shell: "awk '{print $1}' /var/plexguide/vpn.password"
  register: vpnpassword
  tags:
    openvpn
- debug: msg="Your Password is {{ vpnpassword.stdout }}"

- name: "Establishing OpenVPN Server"
  shell: "awk '{print $1}' /var/plexguide/vpn.server"
  register: vpnserver
  ignore_errors: True
  tags:
    openvpn
- debug: msg="Your Server is {{ vpnserver.stdout }}"

- name: Create Basic directories for OpenVPN
  file: "path={{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true"
  with_items:
    - /opt/appdata/openvpn/client
#    - /opt/appdata/openvpn/config/openvpn
  tags:
    openvpn

########## Moving certs to config file
- name: Copy default ovpn cert
  template:
    src: "ca.rsa.2048.crt"
    dest: "/opt/appdata/openvpn/client/ca.rsa.2048.crt"
    force: yes
  tags:
    openvpn

- name: Copy default ovpn pem
  template:
    src: "crl.rsa.2048.pem"
    dest: "/opt/appdata/openvpn/client/crl.rsa.2048.pem"
    force: yes
  tags:
    openvpn

- name: Copy default ovpn file
  template:
    src: "netherlands.ovpn"
    dest: "/opt/appdata/openvpn/client/netherlands.ovpn"
    force: yes
  tags:
    openvpn

########## Remove old existing config file
#- name: Removing all ovpn files
#  file:
#    state: absent
#    path: /opt/appdata/openvpn/*.ovpn
#    force: yes
#    when: ovpn.stat.exists


########## Remote Server selection

#- name: Choose Server
#  pause:
#    prompt: " \n
#      What PIA server would you like to use?\n
#         \n
#       czech, france, germany, israel, montreal,\n
#       romainia, sweden, switzerland, toronto or vancouver.\n
#       \n
#       "
#  register: server

# user can't input server when called from rebuild.sh, so we need a default...
#- set_fact: my_server="{{ server.user_input }}"
#  when: server.user_input != ""

#- set_fact: my_server="netherlands"
#  when: server.user_input == ""

#- debug: var=my_server

#- debug: msg="Using {{server.user_input}} server. "

#- name: "Install {{server.user_input}} openvpn file"
#  template:
#    src: "{{server.user_input}}.ovpn"
#    dest: "/opt/appdata/openvpn/client/{{server.user_input}}.ovpn"
#    force: yes

########## Run iptable_mangle command
- name: Making sure iptable is set
  shell: /sbin/modprobe iptable_mangle
  tags:
    openvpn

######### Remove previous containers
- name: Remove Rtorrent Container
  docker_container:
    name: rtorrentvpn
    state: absent
  ignore_errors: True
  tags:
    openvpn

- name: Remove DelugeVPN Container
  docker_container:
    name: delugevpn
    state: absent
  ignore_errors: True
  tags:
    openvpn

######## Deploy new container
- name: Deploy Openvpn Container
  docker_container:
    name: openvpn
    image: binhex/arch-openvpn
    pull: yes
    cpu_shares: 256
#    network_mode: "bridge"
    capabilities:
      - NET_ADMIN
    published_ports:
#      - "{{ports.stdout}}8112:8112"
      - "8118:8118"
#      - "58846:58846"
#      - "58946:58946"
    env:
      PUID: "1000"
      PGID: "1000"
#     UMASK: "0022"
      NAME_SERVERS: 209.222.18.222,37.235.1.174,8.8.8.8,209.222.18.218,37.235.1.177,8.8.4.4
      VPN_ENABLED: "yes"
      VPN_USER: "{{vpnuser.stdout}}"
      VPN_PASS: "{{vpnpassword.stdout}}"
      VPN_PROV: pia
      STRICT_PORT_FORWARD: "yes"
      STRONG_CERTS: "no"
      ENABLE_PRIVOXY: "yes"
      DEBUG: false
      VPN_PORT: 1198
      VPN_PROTOCOL: udp
      VPN_DEVICE_TYPE: tun
      LAN_NETWORK: "{{subnet}}"
    volumes:
      - /opt/appdata/openvpn/client:/config
      - /etc/localtime:/etc/localtime:ro
    restart_policy: unless-stopped
    state: started
    networks:
      - name: plexguide
        aliases:
          - openvpn
#    labels:
#      traefik.enable: "true"
#      traefik.frontend.redirect.entryPoint: "https"
#      traefik.frontend.rule: "Host:openvpn.{{domain.stdout}}"
#      traefik.port: "8118"
